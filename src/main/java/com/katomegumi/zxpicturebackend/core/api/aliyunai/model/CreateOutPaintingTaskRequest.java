package com.katomegumi.zxpicturebackend.core.api.aliyunai.model;

import cn.hutool.core.annotation.Alias;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;

import java.io.Serializable;

/**
 * @author Megumi
 * 创建扩图任务请求类
 */
@Data
public class CreateOutPaintingTaskRequest implements Serializable {

    /**
     * 模型，例如 "image-out-painting"
     */
    private String model = "image-out-painting";

    /**
     * 输入图像信息
     */
    private Input input;

    /**
     * 图像处理参数
     */
    private Parameters parameters;

    /**
     * 输出图像信息
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class Input {
        /**
         * 必选，图像URL地址或者图像base64数据。
         * 图像限制：
         * <p>
         * 图像格式：JPG、JPEG、PNG、HEIF、WEBP。
         * <p>
         * 图像大小：不超过10MB。
         * <p>
         * 图像分辨率：不低于512×512像素且不超过4096×4096像素。
         * <p>
         * 图像单边长度范围：[512, 4096]，单位像素。
         */
        @Alias("image_url")
        private String imageUrl;
    }

    /**
     * 图像处理参数
     * 处理优先级: output_ratio > x_scale / y_scale > *offset
     */
    @Data
    @Accessors(chain = true) //链式调用
    public static class Parameters implements Serializable {

        /**
         * 可选，逆时针旋转角度，默认值 0，取值范围 [0, 359]
         */
        private Integer angle;

        /**
         * 可选,图像宽高比。可选值有["","1:1", "3:4", "4:3", "9:16", "16:9"]。
         * 默认值为""，表示不设置输出图像的宽高比。
         * 注意:
         * <p>
         * 一旦设置了 output_ratio（非空），系统将仅按该宽高比进行扩展，忽略所有其他扩展参数。
         * <p>
         * 因此，若同时设置了 output_ratio 和 x_scale ，只有 output_ratio 生效，x_scale 被自动忽略，也不会基于 x_scale 自动推导或计算 y_scale。
         */
        @Alias("output_ratio")
        private String outputRatio;

        /**
         * 可选，图像居中，在水平方向上按比例扩展，默认值 1.0，范围 [1.0, 3.0]
         */
        @Alias("x_scale")
        @JsonProperty("xScale")
        private Float xScale;

        /**
         * 可选，图像居中，在垂直方向上按比例扩展，默认值 1.0，范围 [1.0, 3.0]
         */
        @Alias("y_scale")
        @JsonProperty("yScale")
        private Float yScale;

        /**
         * 可选，在图像上方添加像素，默认值 0
         */
        @Alias("top_offset")
        private Integer topOffset;

        /**
         * 可选，在图像下方添加像素，默认值 0
         */
        @Alias("bottom_offset")
        private Integer bottomOffset;

        /**
         * 可选，在图像左侧添加像素，默认值 0
         */
        @Alias("left_offset")
        private Integer leftOffset;

        /**
         * 可选，在图像右侧添加像素，默认值 0
         */
        @Alias("right_offset")
        private Integer rightOffset;

        /**
         * 可选，开启图像最佳质量模式，默认值 false
         * 若为 true，耗时会成倍增加
         */
        @Alias("best_quality")
        private Boolean bestQuality;

        /**
         * 可选，限制模型生成的图像文件大小，默认值 true
         * 输出图像的长宽比范围为1:4至4:1。
         * - 单边长度 <= 10000：输出图像文件大小限制为 5MB 以下
         * - 单边长度 > 10000：输出图像文件大小限制为 10MB 以下
         * 建议设置为true。模型生成的图像需要经过一层安全过滤后才能输出，当前不支持大于10M的图像处理。
         */
        @Alias("limit_image_size")
        private Boolean limitImageSize;

        /**
         * 可选，添加Generated by AI水印。默认值为True，在输出图像左下角处添加水印。
         */
        @Alias("add_watermark")
        private Boolean addWatermark = false;
    }
}

